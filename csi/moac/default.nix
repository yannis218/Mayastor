# This file relies on files generated by node2nix tool:
#
#   node2nix -l package-lock.json --nodejs-10 -c node-composition.nix
#
# It is used to bundle rpc proto files from mayastor repo to moac nix package.
# And to build docker image.

{ pkgs ? import <nixpkgs> { inherit system; }
, system ? builtins.currentSystem
}:
let
  result = import ./node-composition.nix { inherit pkgs system; };
in
result // rec {
  package = result.package.override {
    csiProto = ../proto/csi.proto;
    mayastorProto = ../../rpc/proto/mayastor.proto;
    mayastorServiceProto = ../../rpc/proto/mayastor_service.proto;
    # Prepare script is executed only if npm install is run without any
    # arguments. node2path runs it with a number of args so we must run
    # in manually in postInstall hook :-/
    postInstall = "npm run prepare";
    # add nodejs and busybox to this variable to set it later to ammend the
    # path variable. This makes it easer to exec into the container
    env = pkgs.stdenv.lib.makeBinPath [ pkgs.busybox pkgs.nodejs-10_x ];
  };
  # The current way of creating a docker image has a number of issues.
  # 1) The image size is almost 1G because it includes gcc, python and other
  #    packages required by nodejs for building bindings, but not useful for
  #    running scripts. We would like to strip them off.
  # 2) It would be cool to produce OCI image instead of docker image to
  #    avoid dependency on docker tool chain. Though the maturity of oci
  #    builder in nixpkgs is questionable which is why we delayed this step.
  # 3) We would like to create a /bin/moac symlink so that we don't need to
  #    remember a creeky path to moac script containing a hash. Trying to do
  #    so in extraCommands script yields eperm error.
  # 4) The algorithm for placing packages into the layers is not optimal.
  #    There are a couple of layers with negligable size and then there is
  #    one big layer (~800MB) with everything else. That defeats the purpose
  #    of layering.
  buildImage = pkgs.dockerTools.buildLayeredImage {
    name = "mayadata/moac";
    tag = "latest";
    created = "now";
    contents = [ pkgs.busybox package ];
    config = {
      Entrypoint = [ "${package.out}/bin/moac" ];
      ExposedPorts = { "3000/tcp" = { }; };
      Env = [ "PATH=${package.env}:${package.out}/bin" ];
      WorkDir = "${package.out}";
    };
  };
}
