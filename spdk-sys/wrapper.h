#include <bdev/aio/bdev_aio.h>
#include <bdev/crypto/vbdev_crypto.h>
#include <bdev/iscsi/bdev_iscsi.h>
#include <bdev/lvol/vbdev_lvol.h>
#include <bdev/malloc/bdev_malloc.h>
#include <bdev/nvme/bdev_nvme.h>
#include <bdev/uring/bdev_uring.h>
#include <iscsi/init_grp.h>
#include <iscsi/portal_grp.h>
#include <iscsi/tgt_node.h>
#include <nbd/nbd_internal.h>
#include <spdk/assert.h>
#include <spdk/barrier.h>
#include <spdk/base64.h>
#include <spdk/bdev.h>
#include <spdk/bdev_module.h>
#include <spdk/bit_array.h>
#include <spdk/blob.h>
#include <spdk/blob_bdev.h>
#include <spdk/blobfs.h>
#include <spdk/conf.h>
#include <spdk/config.h>
#include <spdk/copy_engine.h>
#include <spdk/cpuset.h>
#include <spdk/crc16.h>
#include <spdk/crc32.h>
#include <spdk/dif.h>
#include <spdk/endian.h>
#include <spdk/env.h>
#include <spdk/env_dpdk.h>
#include <spdk/event.h>
#include <spdk/fd.h>
#include <spdk/file.h>
#include <spdk/ftl.h>
#include <spdk/gpt_spec.h>
#include <spdk/histogram_data.h>
#include <spdk/io_channel.h>
#include <spdk/ioat.h>
#include <spdk/ioat_spec.h>
#include <spdk/iscsi_spec.h>
#include <spdk/json.h>
#include <spdk/jsonrpc.h>
#include <spdk/likely.h>
#include <spdk/log.h>
#include <spdk/lvol.h>
#include <spdk/mmio.h>
#include <spdk/nbd.h>
#include <spdk/net.h>
#include <spdk/notify.h>
#include <spdk/nvme.h>
#include <spdk/nvme_intel.h>
#include <spdk/nvme_ocssd.h>
#include <spdk/nvme_ocssd_spec.h>
#include <spdk/nvme_spec.h>
#include <spdk/nvmf.h>
#include <spdk/nvmf_fc_spec.h>
#include <spdk/nvmf_spec.h>
#include <spdk/opal.h>
#include <spdk/opal_spec.h>
#include <spdk/pci_ids.h>
#include <spdk/queue.h>
#include <spdk/queue_extras.h>
#include <spdk/reduce.h>
#include <spdk/rpc.h>
#include <spdk/scsi.h>
#include <spdk/scsi_spec.h>
#include <spdk/sock.h>
#include <spdk/stdinc.h>
#include <spdk/string.h>
#include <spdk/thread.h>
#include <spdk/trace.h>
#include <spdk/util.h>
#include <spdk/uuid.h>
#include <spdk/version.h>
#include <spdk/vhost.h>
#include <spdk/vmd.h>
#include <spdk_internal/lvolstore.h>

typedef void maya_logger(int level, const char *file, const int line,
    const char *func, const char *buf, const int len);

// pointer is set from within rust to point to our logging trampoline
maya_logger *logfn = NULL;
